************************************************************************************************************************
Kubernetes (K8S)
************************************************************************************************************************


Get Pods Details:
------------------------------
kubectl get pods -o wide
kubectl get namespaces -o wide
kubectl get nodes -o wide
kubectl get services
------------------------------


Delete Pods created with a config file
------------------------------------------------------------
kubectl delete -f <config_file_name>
------------------------------------------------------------


Update an image in a deployment
------------------------------------------------------------------------------------------------------------------------
kubectl set image deployment/client-deployment client=nakash2050/employee-spa:v2
------------------------------------------------------------------------------------------------------------------------


Check Pod Logs:
------------------------------------------------------------------------------------------------------------------------
kubectl describe pods <POD_NAME>
------------------------------------------------------------------------------------------------------------------------


Creating a Secret
------------------------------------------------------------------------------------------------------------------------
kubectl create secret <generic|tls|docker-registry> <secret_name> --from-literal key=value
------------------------------------------------------------------------------------------------------------------------


Applying Ingress Config
------------------------------------------------------------------------------------------------------------------------
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-0.32.0/deploy/static/provider/cloud/deploy.yaml
kubectl delete -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-0.32.0/deploy/static/provider/cloud/deploy.yaml

Reference:
https://kubernetes.github.io/ingress-nginx/
------------------------------------------------------------------------------------------------------------------------


Kubernetes Dashboard
------------------------------------------------------------------------------------------------------------------------
kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0/aio/deploy/recommended.yaml
kubectl apply -f Kubernetes/dashboard-admin.yaml
kubectl proxy
http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/
kubectl -n kubernetes-dashboard describe secret $(kubectl -n kubernetes-dashboard get secret | grep admin-user | awk '{print $1}')


Clean-up:
kubectl delete -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0/aio/deploy/recommended.yaml


References:
https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/
https://github.com/kubernetes/dashboard/blob/master/docs/user/access-control/creating-sample-user.md
------------------------------------------------------------------------------------------------------------------------


For encrypting GCP Service Account file using Ruby via Docker
------------------------------------------------------------------------------------------------------------------------
docker run --rm -it -v $(PWD):/app --name ruby-encrypter ruby:2.4 sh
cd app
gem install travis
travis login --com
travis encrypt-file service-account.json -r nakash2050/k8s --com


To get GIT SHA
------------------------------------------------------------------------------------------------------------------------
git rev-parse HEAD
------------------------------------------------------------------------------------------------------------------------


HELM for Production deployment which help deploying Ingress
------------------------------------------------------------------------------------------------------------------------
https://helm.sh/docs/intro/quickstart/
$ curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 > get-helm.sh
$ chmod 700 get_helm.sh
$ ./get_helm.sh

helm repo add stable https://kubernetes-charts.storage.googleapis.com/
helm install my-nginx stable/nginx-ingress --set rbac.create=true



Add the following records in Domain Server
------------------------------------------------------------------------------------------------------------------------
Name       Type     TTL       Target
<BLANK>    A        3600      <CLUSTER_PUBLIC_IP>
WWW        CNAME    3600      otmsservice.tk 
------------------------------------------------------------------------------------------------------------------------


Installing HTTPS on K8S
------------------------------------------------------------------------------------------------------------------------
1. Apply the yaml config file

kubectl apply --validate=false -f https://raw.githubusercontent.com/jetstack/cert-manager/release-0.11/deploy/manifests/00-crds.yaml

2. Create the namespace for cert-manager

kubectl create namespace cert-manager

3. Add the Jetstack Helm repository

helm repo add jetstack https://charts.jetstack.io

4. Update your local Helm chart repository cache

helm repo update

5.  Install the cert-manager Helm chart:

Helm v3:

helm install cert-manager --namespace cert-manager --version v0.11.0 jetstack/cert-manager

Reference Docs:
https://docs.cert-manager.io/en/latest/reference/issuers.html
